import time, socket, datetime, os, fcntl, struct, sqlite3\t#import time, IP, time and date \r\n from flask import Flask, render_template, request, jsonify, request, send_file #import web app \r\n from w1thermsensor import W1ThermSensor \r\n import netifaces as ni \r\n #from weather import Weather, Unit \r\n  \r\n #weather = Weather(unit=Unit.CELSIUS) \r\n #lookup = weather.lookup(560743) \r\n  \r\n global int_time \r\n int_time = datetime.datetime.now() \r\n  \r\n app = Flask(__name__) #Assigns app \r\n  \r\n #os.system("sudo mount -t exfat /dev/sda1 /media/usb") \r\n  \r\n localtime = time.asctime( time.localtime(time.time()) ) #Gets the time \r\n print (" * Current time :" + str(localtime)) #Displays Time \r\n  \r\n ni.ifaddresses(\'eth0\') \r\n IP = ni.ifaddresses(\'eth0\')[ni.AF_INET][0][\'addr\'] \r\n  \r\n def accessed(): \r\n \tF = open("A.txt", "r") \r\n \tA = F.read() \r\n \tF.close() \r\n \tF = open("A.txt", "w") \r\n \tF.write(str(int(A)+1)) \r\n \tF.close() \r\n  \r\n  \r\n def getTemperature(): \r\n \tsensor = W1ThermSensor() \r\n \ttemperature = sensor.get_temperature() \r\n \t#temperature = 125.29 \r\n \treturn(temperature) \r\n  \r\n def makeWebpage(): \r\n \t#weather = Weather(unit=Unit.CELSIUS) \r\n \t#lookup = weather.lookup(17044) \r\n \t#wind = lookup.wind \r\n \tW = open("templates/index.html", "w") \r\n \tF = open("First.txt", "r") \r\n \tM = open("Middle.txt", "r") \r\n \tL = open("Last.txt", "r") \r\n \tT = getTemperature() \r\n \tif  T >= 30: \r\n \t\tB = "Hot.png" \r\n \telif 18 <= T < 30: \r\n \t\tB = "Warm.png" \r\n \telif 5 < T < 18: \r\n \t\tB = "Cold.png" \r\n \telif 0 < T <= 5: \r\n \t\tB = "rCold.png" \r\n \telse: \r\n \t\tB = "sCold.png" \r\n \tW.write(F.read() + B + M.read() + str(round(T, 1)) + "\xc2\xb0C <h4> " +  str(round(T, 2)) + "\xc2\xb0C </h4> " + L.read()) \r\n \taccessed() \r\n \tW.close() \r\n \tF.close() \r\n \tM.close() \r\n \tL.close() \r\n  \r\n @app.route(\'/\') #Sets index \r\n def index(): \r\n \tmakeWebpage() \r\n \treturn render_template(\'index.html\') #Displays HTML page \'Relay.html\' \r\n \t \r\n @app.route(\'/about\') #Sets index \r\n def about(): \r\n \tAf = open("aF.txt", "r") \r\n \tAl = open("aL.txt", "r") \r\n \tAw = open("templates/about.html", "w") \r\n \tN = open("A.txt", "r") \r\n \tUptime = datetime.datetime.now() - int_time \r\n \tAw.write(Af.read() + "<p> <center> This Weather Station Has Been Used " + str(N.read()) + " Times </center> </p> <p> <center> Temperature (Up to 3dp): " + str(getTemperature()) + "\xc2\xb0C </center> </p> <center> <p> Uptime: " + str(Uptime.days)+ " day(s), " + str(Uptime.seconds//3600) + " hour(s), "+ str(int((Uptime.seconds//60)%60)) + " minute(s) and " + str(int(Uptime.seconds%60)) + " second(s) </center>" + Al.read()) \r\n \tAf.close() \r\n \tAl.close() \r\n \tAw.close() \r\n \tN.close() \r\n \treturn render_template(\'about.html\') #Displays HTML page \'Relay.html\' \r\n  \r\n @app.route(\'/source\') #Sets index \r\n def source(): \r\n \treturn send_file(\'Weather.py\') \r\n  \r\n if __name__ == \'__main__\': \r\n \tapp.run(debug=True, host=(str(IP)), threaded=True, port=80) \r\n GPIO.cleanup()\